(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{166:function(t,n){const o={render:function(){this.$createElement;return this._self._c,this._m(0)},staticRenderFns:[function(){var t=this,n=t.$createElement,o=t._self._c||n;return o("div",{staticClass:"frontmatter-markdown"},[o("h1",[t._v("JavaScript专题之从零实现jQuery的extend")]),t._v(" "),o("h2",[t._v("前言")]),t._v(" "),o("p",[t._v("jQuery 的 extend 是 jQuery 中应用非常多的一个函数，今天我们一边看 jQuery 的 extend 的特性，一边实现一个 extend!")]),t._v(" "),o("h2",[t._v("extend 基本用法")]),t._v(" "),o("p",[t._v("先来看看 extend 的功能，引用 jQuery 官网：")]),t._v(" "),o("blockquote",[o("p",[t._v("Merge the contents of two or more objects together into the first object.")])]),t._v(" "),o("p",[t._v("翻译过来就是，合并两个或者更多的对象的内容到第一个对象中。")]),t._v(" "),o("p",[t._v("让我们看看 extend 的用法：")]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{staticClass:"language-js"},[t._v("jQuery"),o("span",{staticClass:"token punctuation"},[t._v(".")]),o("span",{staticClass:"token function"},[t._v("extend")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v(" target "),o("span",{staticClass:"token punctuation"},[t._v("[")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" object1 "),o("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("[")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" objectN "),o("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n")])]),t._v(" "),o("p",[t._v("第一个参数 target，表示要拓展的目标，我们就称它为目标对象吧。")]),t._v(" "),o("p",[t._v("后面的参数，都传入对象，内容都会复制到目标对象中，我们就称它们为待复制对象吧。")]),t._v(" "),o("p",[t._v("举个例子：")]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{staticClass:"language-js"},[o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" obj1 "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    a"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("1")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    b"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v(" b1"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("1")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" b2"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("2")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),o("span",{staticClass:"token punctuation"},[t._v("}")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" obj2 "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    b"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v(" b1"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("3")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" b3"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("4")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("}")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    c"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("3")]),t._v("\n"),o("span",{staticClass:"token punctuation"},[t._v("}")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" obj3 "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    d"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("4")]),t._v("\n"),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\nconsole"),o("span",{staticClass:"token punctuation"},[t._v(".")]),o("span",{staticClass:"token function"},[t._v("log")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("$"),o("span",{staticClass:"token punctuation"},[t._v(".")]),o("span",{staticClass:"token function"},[t._v("extend")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("obj1"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" obj2"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" obj3"),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),o("span",{staticClass:"token comment"},[t._v("// {")]),t._v("\n"),o("span",{staticClass:"token comment"},[t._v("//    a: 1,")]),t._v("\n"),o("span",{staticClass:"token comment"},[t._v("//    b: { b1: 3, b3: 4 },")]),t._v("\n"),o("span",{staticClass:"token comment"},[t._v("//    c: 3,")]),t._v("\n"),o("span",{staticClass:"token comment"},[t._v("//    d: 4")]),t._v("\n"),o("span",{staticClass:"token comment"},[t._v("// }")]),t._v("\n")])]),t._v(" "),o("p",[t._v("当两个对象出现相同字段的时候，后者会覆盖前者，而不会进行深层次的覆盖。")]),t._v(" "),o("h2",[t._v("extend 第一版")]),t._v(" "),o("p",[t._v("结合着上篇写得 "),o("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/32",target:"_blank"}},[t._v("《JavaScript专题之深浅拷贝》")]),t._v("，我们尝试着自己写一个 extend 函数：")]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{staticClass:"language-js"},[o("span",{staticClass:"token comment"},[t._v("// 第一版")]),t._v("\n"),o("span",{staticClass:"token keyword"},[t._v("function")]),t._v(" "),o("span",{staticClass:"token function"},[t._v("extend")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" name"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" options"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" copy"),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" length "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" arguments"),o("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("length"),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" i "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("1")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" target "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" arguments"),o("span",{staticClass:"token punctuation"},[t._v("[")]),o("span",{staticClass:"token number"},[t._v("0")]),o("span",{staticClass:"token punctuation"},[t._v("]")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n    "),o("span",{staticClass:"token keyword"},[t._v("for")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v(" i "),o("span",{staticClass:"token operator"},[t._v("<")]),t._v(" length"),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v(" i"),o("span",{staticClass:"token operator"},[t._v("++")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        options "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" arguments"),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("i"),o("span",{staticClass:"token punctuation"},[t._v("]")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        "),o("span",{staticClass:"token keyword"},[t._v("if")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("options "),o("span",{staticClass:"token operator"},[t._v("!=")]),t._v(" "),o("span",{staticClass:"token keyword"},[t._v("null")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n            "),o("span",{staticClass:"token keyword"},[t._v("for")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("name "),o("span",{staticClass:"token keyword"},[t._v("in")]),t._v(" options"),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n                copy "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" options"),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("name"),o("span",{staticClass:"token punctuation"},[t._v("]")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n                "),o("span",{staticClass:"token keyword"},[t._v("if")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("copy "),o("span",{staticClass:"token operator"},[t._v("!==")]),t._v(" "),o("span",{staticClass:"token keyword"},[t._v("undefined")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n                    target"),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("name"),o("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" copy"),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n                "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n            "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n        "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n    "),o("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" target"),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),o("span",{staticClass:"token punctuation"},[t._v("}")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])]),t._v(" "),o("h2",[t._v("extend 深拷贝")]),t._v(" "),o("p",[t._v("那如何进行深层次的复制呢？jQuery v1.1.4 加入了一个新的用法：")]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{staticClass:"language-js"},[t._v("jQuery"),o("span",{staticClass:"token punctuation"},[t._v(".")]),o("span",{staticClass:"token function"},[t._v("extend")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("deep"),o("span",{staticClass:"token punctuation"},[t._v("]")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" target"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" object1 "),o("span",{staticClass:"token punctuation"},[t._v("[")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" objectN "),o("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n")])]),t._v(" "),o("p",[t._v("也就是说，函数的第一个参数可以传一个布尔值，如果为 true，我们就会进行深拷贝，false 依然当做浅拷贝，这个时候，target 就往后移动到第二个参数。")]),t._v(" "),o("p",[t._v("还是举这个例子：")]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{staticClass:"language-js"},[o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" obj1 "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    a"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("1")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    b"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v(" b1"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("1")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" b2"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("2")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),o("span",{staticClass:"token punctuation"},[t._v("}")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" obj2 "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    b"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v(" b1"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("3")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" b3"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("4")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("}")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    c"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("3")]),t._v("\n"),o("span",{staticClass:"token punctuation"},[t._v("}")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" obj3 "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    d"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("4")]),t._v("\n"),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\nconsole"),o("span",{staticClass:"token punctuation"},[t._v(".")]),o("span",{staticClass:"token function"},[t._v("log")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("$"),o("span",{staticClass:"token punctuation"},[t._v(".")]),o("span",{staticClass:"token function"},[t._v("extend")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token boolean"},[t._v("true")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" obj1"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" obj2"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" obj3"),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),o("span",{staticClass:"token comment"},[t._v("// {")]),t._v("\n"),o("span",{staticClass:"token comment"},[t._v("//    a: 1,")]),t._v("\n"),o("span",{staticClass:"token comment"},[t._v("//    b: { b1: 3, b2: 2, b3: 4 },")]),t._v("\n"),o("span",{staticClass:"token comment"},[t._v("//    c: 3,")]),t._v("\n"),o("span",{staticClass:"token comment"},[t._v("//    d: 4")]),t._v("\n"),o("span",{staticClass:"token comment"},[t._v("// }")]),t._v("\n")])]),t._v(" "),o("p",[t._v("因为采用了深拷贝，会遍历到更深的层次进行添加和覆盖。")]),t._v(" "),o("h2",[t._v("extend 第二版")]),t._v(" "),o("p",[t._v("我们来实现深拷贝的功能，值得注意的是：")]),t._v(" "),o("ol",[o("li",[t._v("需要根据第一个参数的类型，确定 target 和要合并的对象的下标起始值。")]),t._v(" "),o("li",[t._v("如果是深拷贝，根据 copy 的类型递归 extend。")])]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{staticClass:"language-js"},[o("span",{staticClass:"token comment"},[t._v("// 第二版")]),t._v("\n"),o("span",{staticClass:"token keyword"},[t._v("function")]),t._v(" "),o("span",{staticClass:"token function"},[t._v("extend")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),o("span",{staticClass:"token comment"},[t._v("// 默认不进行深拷贝")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" deep "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token boolean"},[t._v("false")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" name"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" options"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" src"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" copy"),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" length "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" arguments"),o("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("length"),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),o("span",{staticClass:"token comment"},[t._v("// 记录要复制的对象的下标")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" i "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("1")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),o("span",{staticClass:"token comment"},[t._v("// 第一个参数不传布尔值的情况下，target默认是第一个参数")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" target "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" arguments"),o("span",{staticClass:"token punctuation"},[t._v("[")]),o("span",{staticClass:"token number"},[t._v("0")]),o("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),o("span",{staticClass:"token operator"},[t._v("||")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),o("span",{staticClass:"token punctuation"},[t._v("}")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),o("span",{staticClass:"token comment"},[t._v("// 如果第一个参数是布尔值，第二个参数是才是target")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("if")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token keyword"},[t._v("typeof")]),t._v(" target "),o("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),o("span",{staticClass:"token string"},[t._v("'boolean'")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        deep "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" target"),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        target "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" arguments"),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("i"),o("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),o("span",{staticClass:"token operator"},[t._v("||")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),o("span",{staticClass:"token punctuation"},[t._v("}")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        i"),o("span",{staticClass:"token operator"},[t._v("++")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    "),o("span",{staticClass:"token comment"},[t._v("// 如果target不是对象，我们是无法进行复制的，所以设为{}")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("if")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token keyword"},[t._v("typeof")]),t._v(" target "),o("span",{staticClass:"token operator"},[t._v("!==")]),t._v(" "),o("span",{staticClass:"token string"},[t._v("'object'")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        target "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n    "),o("span",{staticClass:"token comment"},[t._v("// 循环遍历要复制的对象们")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("for")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v(" i "),o("span",{staticClass:"token operator"},[t._v("<")]),t._v(" length"),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v(" i"),o("span",{staticClass:"token operator"},[t._v("++")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        "),o("span",{staticClass:"token comment"},[t._v("// 获取当前对象")]),t._v("\n        options "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" arguments"),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("i"),o("span",{staticClass:"token punctuation"},[t._v("]")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        "),o("span",{staticClass:"token comment"},[t._v("// 要求不能为空 避免extend(a,,b)这种情况")]),t._v("\n        "),o("span",{staticClass:"token keyword"},[t._v("if")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("options "),o("span",{staticClass:"token operator"},[t._v("!=")]),t._v(" "),o("span",{staticClass:"token keyword"},[t._v("null")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n            "),o("span",{staticClass:"token keyword"},[t._v("for")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("name "),o("span",{staticClass:"token keyword"},[t._v("in")]),t._v(" options"),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n                "),o("span",{staticClass:"token comment"},[t._v("// 目标属性值")]),t._v("\n                src "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" target"),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("name"),o("span",{staticClass:"token punctuation"},[t._v("]")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n                "),o("span",{staticClass:"token comment"},[t._v("// 要复制的对象的属性值")]),t._v("\n                copy "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" options"),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("name"),o("span",{staticClass:"token punctuation"},[t._v("]")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n                "),o("span",{staticClass:"token keyword"},[t._v("if")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("deep "),o("span",{staticClass:"token operator"},[t._v("&&")]),t._v(" copy "),o("span",{staticClass:"token operator"},[t._v("&&")]),t._v(" "),o("span",{staticClass:"token keyword"},[t._v("typeof")]),t._v(" copy "),o("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),o("span",{staticClass:"token string"},[t._v("'object'")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n                    "),o("span",{staticClass:"token comment"},[t._v("// 递归调用")]),t._v("\n                    target"),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("name"),o("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token function"},[t._v("extend")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("deep"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" src"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" copy"),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n                "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n                "),o("span",{staticClass:"token keyword"},[t._v("else")]),t._v(" "),o("span",{staticClass:"token keyword"},[t._v("if")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("copy "),o("span",{staticClass:"token operator"},[t._v("!==")]),t._v(" "),o("span",{staticClass:"token keyword"},[t._v("undefined")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n                    target"),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("name"),o("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" copy"),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n                "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n            "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n        "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n    "),o("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" target"),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),o("span",{staticClass:"token punctuation"},[t._v("}")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])]),t._v(" "),o("p",[t._v("在实现上，核心的部分还是跟上篇实现的深浅拷贝函数一致，如果要复制的对象的属性值是一个对象，就递归调用 extend。不过 extend 的实现中，多了很多细节上的判断，比如第一个参数是否是布尔值，target 是否是一个对象，不传参数时的默认值等。")]),t._v(" "),o("p",[t._v("接下来，我们看几个 jQuery 的 extend 使用效果：")]),t._v(" "),o("h2",[t._v("target 是函数")]),t._v(" "),o("p",[t._v("在我们的实现中，"),o("code",{pre:!0},[t._v("typeof target")]),t._v(" 必须等于 "),o("code",{pre:!0},[t._v("object")]),t._v("，我们才会在这个 "),o("code",{pre:!0},[t._v("target")]),t._v(" 基础上进行拓展，然而我们用 "),o("code",{pre:!0},[t._v("typeof")]),t._v(" 判断一个函数时，会返回"),o("code",{pre:!0},[t._v("function")]),t._v("，也就是说，我们无法在一个函数上进行拓展！")]),t._v(" "),o("p",[t._v("什么，我们还能在一个函数上进行拓展！！")]),t._v(" "),o("p",[t._v("当然啦，毕竟函数也是一种对象嘛，让我们看个例子：")]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{staticClass:"language-js"},[o("span",{staticClass:"token keyword"},[t._v("function")]),t._v(" "),o("span",{staticClass:"token function"},[t._v("a")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\na"),o("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("target "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token string"},[t._v("'b'")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\nconsole"),o("span",{staticClass:"token punctuation"},[t._v(".")]),o("span",{staticClass:"token function"},[t._v("log")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("a"),o("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("target"),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v(" "),o("span",{staticClass:"token comment"},[t._v("// b")]),t._v("\n")])]),t._v(" "),o("p",[t._v("实际上，在 underscore 的实现中，underscore 的各种方法便是挂在了函数上！")]),t._v(" "),o("p",[t._v("所以在这里我们还要判断是不是函数，这时候我们便可以使用"),o("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/28",target:"_blank"}},[t._v("《JavaScript专题之类型判断(上)》")]),t._v("中写得 isFunction 函数")]),t._v(" "),o("p",[t._v("我们这样修改：")]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{staticClass:"language-js"},[o("span",{staticClass:"token keyword"},[t._v("if")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token keyword"},[t._v("typeof")]),t._v(" target "),o("span",{staticClass:"token operator"},[t._v("!==")]),t._v(" "),o("span",{staticClass:"token string"},[t._v('"object"')]),t._v(" "),o("span",{staticClass:"token operator"},[t._v("&&")]),t._v(" "),o("span",{staticClass:"token operator"},[t._v("!")]),o("span",{staticClass:"token function"},[t._v("isFunction")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("target"),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    target "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),o("span",{staticClass:"token punctuation"},[t._v("}")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n")])]),t._v(" "),o("h2",[t._v("类型不一致")]),t._v(" "),o("p",[t._v("其实我们实现的方法有个小 bug ，不信我们写个 demo:")]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{staticClass:"language-js"},[o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" obj1 "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    a"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("1")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    b"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        c"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("2")]),t._v("\n    "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n"),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" obj2 "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    b"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        c"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("[")]),o("span",{staticClass:"token number"},[t._v("5")]),o("span",{staticClass:"token punctuation"},[t._v("]")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n\n    "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n"),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" d "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token function"},[t._v("extend")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token boolean"},[t._v("true")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" obj1"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" obj2"),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\nconsole"),o("span",{staticClass:"token punctuation"},[t._v(".")]),o("span",{staticClass:"token function"},[t._v("log")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("d"),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])]),t._v(" "),o("p",[t._v("我们预期会返回这样一个对象：")]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{staticClass:"language-js"},[o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    a"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("1")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    b"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        c"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("[")]),o("span",{staticClass:"token number"},[t._v("5")]),o("span",{staticClass:"token punctuation"},[t._v("]")]),t._v("\n    "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n")])]),t._v(" "),o("p",[t._v("然而返回了这样一个对象:")]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{staticClass:"language-js"},[o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    a"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("1")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    b"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        c"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n            "),o("span",{staticClass:"token number"},[t._v("0")]),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("5")]),t._v("\n        "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n")])]),t._v(" "),o("p",[t._v("让我们细细分析为什么会导致这种情况：")]),t._v(" "),o("p",[t._v("首先我们在函数的开始写一个 console 函数比如：console.log(1)，然后以上面这个 demo 为例，执行一下，我们会发现 1 打印了三次，这就是说 extend 函数执行了三遍，让我们捋一捋这三遍传入的参数：")]),t._v(" "),o("p",[t._v("第一遍执行到递归调用时：")]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{staticClass:"language-js"},[o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" src "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v(" c"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("2")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("}")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" copy "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v(" c"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("[")]),o("span",{staticClass:"token number"},[t._v("5")]),o("span",{staticClass:"token punctuation"},[t._v("]")]),o("span",{staticClass:"token punctuation"},[t._v("}")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\ntarget"),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("name"),o("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token function"},[t._v("extend")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token boolean"},[t._v("true")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" src"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" copy"),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n")])]),t._v(" "),o("p",[t._v("第二遍执行到递归调用时：")]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{staticClass:"language-js"},[o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" src "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("2")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" copy "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("[")]),o("span",{staticClass:"token number"},[t._v("5")]),o("span",{staticClass:"token punctuation"},[t._v("]")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\ntarget"),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("name"),o("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token function"},[t._v("extend")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token boolean"},[t._v("true")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" src"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" copy"),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n")])]),t._v(" "),o("p",[t._v("第三遍进行最终的赋值，因为 src 是一个基本类型，我们默认使用一个空对象作为目标值，所以最终的结果就变成了对象的属性！")]),t._v(" "),o("p",[t._v("为了解决这个问题，我们需要对目标属性值和待复制对象的属性值进行判断：")]),t._v(" "),o("p",[t._v("判断目标属性值跟要复制的对象的属性值类型是否一致:")]),t._v(" "),o("ul",[o("li",[o("p",[t._v("如果待复制对象属性值类型为数组，目标属性值类型不为数组的话，目标属性值就设为 []")])]),t._v(" "),o("li",[o("p",[t._v("如果待复制对象属性值类型为对象，目标属性值类型不为对象的话，目标属性值就设为 {}")])])]),t._v(" "),o("p",[t._v("结合着"),o("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/30",target:"_blank"}},[t._v("《JavaScript专题之类型判断(下)》")]),t._v("中的 isPlainObject 函数，我们可以对类型进行更细致的划分：")]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{pre:!0,attrs:{class:"language-js"}},[t._v("\n"),o("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" clone"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" copyIsArray"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\n"),o("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("deep "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" copy "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),o("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPlainObject")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("copy"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n        "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("copyIsArray "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Array"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),o("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("copy"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),o("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("copyIsArray"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        copyIsArray "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        clone "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" src "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" Array"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),o("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("src"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" src "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        clone "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" src "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPlainObject")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("src"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" src "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    target"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token function"}},[t._v("extend")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("deep"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" clone"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" copy"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("copy "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    target"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" copy"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),o("h2",[t._v("循环引用")]),t._v(" "),o("p",[t._v("实际上，我们还可能遇到一个循环引用的问题，举个例子：")]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{staticClass:"language-js"},[o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" a "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("name "),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" b"),o("span",{staticClass:"token punctuation"},[t._v("}")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" b "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("name "),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" a"),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" c "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token function"},[t._v("extend")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("a"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" b"),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\nconsole"),o("span",{staticClass:"token punctuation"},[t._v(".")]),o("span",{staticClass:"token function"},[t._v("log")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("c"),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])]),t._v(" "),o("p",[t._v("我们会得到一个可以无限展开的对象，类似于这样：")]),t._v(" "),o("p",[o("img",{attrs:{src:"https://github.com/mqyqingfeng/Blog/raw/master/Images/extend/extend1.png",alt:"循环引用对象"}})]),t._v(" "),o("p",[t._v("为了避免这个问题，我们需要判断要复制的对象属性是否等于 target，如果等于，我们就跳过：")]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{staticClass:"language-js"},[o("span",{staticClass:"token operator"},[t._v("...")]),t._v("\nsrc "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" target"),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("name"),o("span",{staticClass:"token punctuation"},[t._v("]")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\ncopy "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" options"),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("name"),o("span",{staticClass:"token punctuation"},[t._v("]")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n"),o("span",{staticClass:"token keyword"},[t._v("if")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("target "),o("span",{staticClass:"token operator"},[t._v("===")]),t._v(" copy"),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("continue")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),o("span",{staticClass:"token operator"},[t._v("...")]),t._v("\n")])]),t._v(" "),o("p",[t._v("如果加上这句，结果就会是：")]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{staticClass:"language-js"},[o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("name"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token keyword"},[t._v("undefined")]),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n")])]),t._v(" "),o("h2",[t._v("最终代码")]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{staticClass:"language-js"},[o("span",{staticClass:"token keyword"},[t._v("function")]),t._v(" "),o("span",{staticClass:"token function"},[t._v("extend")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),o("span",{staticClass:"token comment"},[t._v("// 默认不进行深拷贝")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" deep "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token boolean"},[t._v("false")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" name"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" options"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" src"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" copy"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" clone"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" copyIsArray"),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" length "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" arguments"),o("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("length"),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),o("span",{staticClass:"token comment"},[t._v("// 记录要复制的对象的下标")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" i "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("1")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),o("span",{staticClass:"token comment"},[t._v("// 第一个参数不传布尔值的情况下，target 默认是第一个参数")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" target "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" arguments"),o("span",{staticClass:"token punctuation"},[t._v("[")]),o("span",{staticClass:"token number"},[t._v("0")]),o("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),o("span",{staticClass:"token operator"},[t._v("||")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),o("span",{staticClass:"token punctuation"},[t._v("}")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),o("span",{staticClass:"token comment"},[t._v("// 如果第一个参数是布尔值，第二个参数是 target")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("if")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token keyword"},[t._v("typeof")]),t._v(" target "),o("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),o("span",{staticClass:"token string"},[t._v("'boolean'")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        deep "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" target"),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        target "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" arguments"),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("i"),o("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),o("span",{staticClass:"token operator"},[t._v("||")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),o("span",{staticClass:"token punctuation"},[t._v("}")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        i"),o("span",{staticClass:"token operator"},[t._v("++")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    "),o("span",{staticClass:"token comment"},[t._v("// 如果target不是对象，我们是无法进行复制的，所以设为 {}")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("if")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token keyword"},[t._v("typeof")]),t._v(" target "),o("span",{staticClass:"token operator"},[t._v("!==")]),t._v(" "),o("span",{staticClass:"token string"},[t._v('"object"')]),t._v(" "),o("span",{staticClass:"token operator"},[t._v("&&")]),t._v(" "),o("span",{staticClass:"token operator"},[t._v("!")]),o("span",{staticClass:"token function"},[t._v("isFunction")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("target"),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        target "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),o("span",{staticClass:"token punctuation"},[t._v("}")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n    "),o("span",{staticClass:"token comment"},[t._v("// 循环遍历要复制的对象们")]),t._v("\n    "),o("span",{staticClass:"token keyword"},[t._v("for")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v(" i "),o("span",{staticClass:"token operator"},[t._v("<")]),t._v(" length"),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v(" i"),o("span",{staticClass:"token operator"},[t._v("++")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        "),o("span",{staticClass:"token comment"},[t._v("// 获取当前对象")]),t._v("\n        options "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" arguments"),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("i"),o("span",{staticClass:"token punctuation"},[t._v("]")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n        "),o("span",{staticClass:"token comment"},[t._v("// 要求不能为空 避免 extend(a,,b) 这种情况")]),t._v("\n        "),o("span",{staticClass:"token keyword"},[t._v("if")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("options "),o("span",{staticClass:"token operator"},[t._v("!=")]),t._v(" "),o("span",{staticClass:"token keyword"},[t._v("null")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n            "),o("span",{staticClass:"token keyword"},[t._v("for")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("name "),o("span",{staticClass:"token keyword"},[t._v("in")]),t._v(" options"),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n                "),o("span",{staticClass:"token comment"},[t._v("// 目标属性值")]),t._v("\n                src "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" target"),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("name"),o("span",{staticClass:"token punctuation"},[t._v("]")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n                "),o("span",{staticClass:"token comment"},[t._v("// 要复制的对象的属性值")]),t._v("\n                copy "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" options"),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("name"),o("span",{staticClass:"token punctuation"},[t._v("]")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n                "),o("span",{staticClass:"token comment"},[t._v("// 解决循环引用")]),t._v("\n                "),o("span",{staticClass:"token keyword"},[t._v("if")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("target "),o("span",{staticClass:"token operator"},[t._v("===")]),t._v(" copy"),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n                    "),o("span",{staticClass:"token keyword"},[t._v("continue")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n                "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n                "),o("span",{staticClass:"token comment"},[t._v("// 要递归的对象必须是 plainObject 或者数组")]),t._v("\n                "),o("span",{staticClass:"token keyword"},[t._v("if")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("deep "),o("span",{staticClass:"token operator"},[t._v("&&")]),t._v(" copy "),o("span",{staticClass:"token operator"},[t._v("&&")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token function"},[t._v("isPlainObject")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("copy"),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token operator"},[t._v("||")]),t._v("\n                        "),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("copyIsArray "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" Array"),o("span",{staticClass:"token punctuation"},[t._v(".")]),o("span",{staticClass:"token function"},[t._v("isArray")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("copy"),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n                    "),o("span",{staticClass:"token comment"},[t._v("// 要复制的对象属性值类型需要与目标属性值相同")]),t._v("\n                    "),o("span",{staticClass:"token keyword"},[t._v("if")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("copyIsArray"),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n                        copyIsArray "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token boolean"},[t._v("false")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n                        clone "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" src "),o("span",{staticClass:"token operator"},[t._v("&&")]),t._v(" Array"),o("span",{staticClass:"token punctuation"},[t._v(".")]),o("span",{staticClass:"token function"},[t._v("isArray")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("src"),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token operator"},[t._v("?")]),t._v(" src "),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("[")]),o("span",{staticClass:"token punctuation"},[t._v("]")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n                    "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v(" "),o("span",{staticClass:"token keyword"},[t._v("else")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n                        clone "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" src "),o("span",{staticClass:"token operator"},[t._v("&&")]),t._v(" "),o("span",{staticClass:"token function"},[t._v("isPlainObject")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("src"),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token operator"},[t._v("?")]),t._v(" src "),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),o("span",{staticClass:"token punctuation"},[t._v("}")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n                    "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n                    target"),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("name"),o("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token function"},[t._v("extend")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("deep"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" clone"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" copy"),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n\n                "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v(" "),o("span",{staticClass:"token keyword"},[t._v("else")]),t._v(" "),o("span",{staticClass:"token keyword"},[t._v("if")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("copy "),o("span",{staticClass:"token operator"},[t._v("!==")]),t._v(" "),o("span",{staticClass:"token keyword"},[t._v("undefined")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n                    target"),o("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("name"),o("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" copy"),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n                "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n            "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n        "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n    "),o("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" target"),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),o("span",{staticClass:"token punctuation"},[t._v("}")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n")])]),t._v(" "),o("h2",[t._v("思考题")]),t._v(" "),o("p",[t._v("如果觉得看明白了上面的代码，想想下面两个 demo 的结果：")]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{staticClass:"language-js"},[o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" a "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token function"},[t._v("extend")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token boolean"},[t._v("true")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("[")]),o("span",{staticClass:"token number"},[t._v("4")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("5")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("6")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("7")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("8")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("9")]),o("span",{staticClass:"token punctuation"},[t._v("]")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("[")]),o("span",{staticClass:"token number"},[t._v("1")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("2")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("3")]),o("span",{staticClass:"token punctuation"},[t._v("]")]),o("span",{staticClass:"token punctuation"},[t._v(")")]),o("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\nconsole"),o("span",{staticClass:"token punctuation"},[t._v(".")]),o("span",{staticClass:"token function"},[t._v("log")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("a"),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token comment"},[t._v("// ???")]),t._v("\n")])]),t._v(" "),o("pre",{staticClass:"language-js"},[o("code",{staticClass:"language-js"},[o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" obj1 "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    value"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        "),o("span",{staticClass:"token number"},[t._v("3")]),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("1")]),t._v("\n    "),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n"),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" obj2 "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    value"),o("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),o("span",{staticClass:"token punctuation"},[t._v("[")]),o("span",{staticClass:"token number"},[t._v("5")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("6")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),o("span",{staticClass:"token number"},[t._v("7")]),o("span",{staticClass:"token punctuation"},[t._v("]")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n\n"),o("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n"),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" b "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token function"},[t._v("extend")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token boolean"},[t._v("true")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" obj1"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" obj2"),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token comment"},[t._v("// ???")]),t._v("\n"),o("span",{staticClass:"token keyword"},[t._v("var")]),t._v(" c "),o("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),o("span",{staticClass:"token function"},[t._v("extend")]),o("span",{staticClass:"token punctuation"},[t._v("(")]),o("span",{staticClass:"token boolean"},[t._v("true")]),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" obj2"),o("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" obj1"),o("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),o("span",{staticClass:"token comment"},[t._v("// ???")]),t._v("\n")])]),t._v(" "),o("h2",[t._v("专题系列")]),t._v(" "),o("p",[t._v("JavaScript专题系列目录地址："),o("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog",target:"_blank"}},[t._v("https://github.com/mqyqingfeng/Blog")]),t._v("。")]),t._v(" "),o("p",[t._v("JavaScript专题系列预计写二十篇左右，主要研究日常开发中一些功能点的实现，比如防抖、节流、去重、类型判断、拷贝、最值、扁平、柯里、递归、乱序、排序等，特点是研(chao)究(xi) underscore 和 jQuery 的实现方式。")]),t._v(" "),o("p",[t._v("如果有错误或者不严谨的地方，请务必给予指正，十分感谢。如果喜欢或者有所启发，欢迎 star，对作者也是一种鼓励。")])])}]};t.exports={attributes:{name:"jQuery",title:"JavaScript专题之从零实现jQuery的extend",year:"28 May 2019",id:"bacon-ipsum",description:"jQuery 的 extend 是 jQuery 中应用非常多的一个函数，今天我们一边看 jQuery 的 extend 的特性，一边实现一个 extend!"},meta:{resourcePath:"G:\\projects\\nuxt-blog\\contents\\jquery.md"},vue:{component:{data:function(){return{templateRender:null}},render:function(t){return this.templateRender?this.templateRender():t("div","Rendering")},created:function(){this.templateRender=o.render,this.$options.staticRenderFns=o.staticRenderFns}}}}}}]);